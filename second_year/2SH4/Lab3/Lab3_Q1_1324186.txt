/* 
 * File:   main.c
 * Author: mirzahw
 *
 * Created on October 2, 2014, 2:33 PM
 */


#include <stdio.h>
#include <stdlib.h>
#define N 3 // Defines matrix size
#include <math.h>
// Define functions used
int isDiagDom(int mat[][N]);
int myAbs(int x);

/*
 * 
 */
int isDiagDom(int mat[][N]) { // Checks to see if the matrix is diagonally dominant
    
    int row = 0; // Row of matrix
    int col; // Column of matrix
    int diag_element; // Diagonal Element of matrix
    while (row < N) // Does this for each row of the matrix
    {
        int sum = 0;
        for (col = 0; col < N; col++) // Does this for each column of the matrix
        {
            if (col == row) // Checks to see if the column is the same as the row
            {
                diag_element = myAbs(mat[row][col]); // This means that the value is the diagonal element
            }
            else // Otherwise it adds the value to the sum
            {
                sum = sum + myAbs(mat[row][col]);
            }
        }
        if (diag_element > sum) // Checks to see if the Diagonal element is greater then or equal to the sum
        {
            row++; // Adds one to the row so the loop can do this process for the next row
        }
        else // If not that means the matrix is not diagonally dominant
        {
            return 0;
            break; // Breaks the loop and returns 0
        }
    }
    return 1;    
}
int myAbs(int x) { // Gets the absolute value
    x = fabs(x);
    return x;
}
int main(int argc, char** argv) {

    int array [N][N] = {-4,2,1,1,6,2,1,-2,5};
    printf("%d\n" , isDiagDom(array));
    return (EXIT_SUCCESS);
}