/* 
 * File:   main.c
 * Author: mirzahw
 *
 * Created on October 2, 2014, 2:37 PM
 */

#include <stdio.h>
#include <stdlib.h>

/*
 * 
 */
void efficient(const int source[], int val[], int pos[], int size) { /* Used for find sparse*/
    
    int i; /* For for loop*/
    int k = 0; /* Counter for array*/
    printf("Value | Position\n");
    for (i = 0; i < size; i++) /* Goes through each number in source*/
    {
        if (source[i] != 0) /* Checks if the number is a nonzero value*/
        {
            val[k] = source[i]; /* Stores that number in val*/
            pos[k] = i; /* Stores the i in pos*/
            k++; /* Increases both the pos and val array*/
        }
    }
    
    for (i = 0; i < k; i++) /* Prints val and pos*/
    {
        printf("%d      %d\n\n",val[i],pos[i]);
    }
    
}
void reconstruct( int source[], int m, const int val[], const int pos[], int n){
    
    int i; /* Counter for for loop*/
    int k = 0; /* Counter for val and pos*/
    for (i = 0; i < m; i++) /* Runs loop until all variables are put in source*/
    {
        if (i == pos[k]) /* Checks to see if i is equal to the first value of pos*/
        {
            source[i] = val[k]; /* Adds the first value of val to the respective location*/
            k++; /* Adds one to k to get to the next val and pos number*/
        }
        else /* Otherwise puts 0*/
        {
            source[i] = 0;
        }
    }
    printf("The original vector was: ");
    for (i = 0; i < m; i++) /* Prints out each number in source*/
    {
        printf("%d, " , source[i]);
    }
    printf("\n\n");
}
int main(int argc, char** argv) {

    int x[5] = {1,0,0,4,5};
    int y[3];
    int z[3];
    efficient (x,y,z,5);
    int j[10];
    int v[3] = {3,6,4};
    int p[3] = {2,5,7};
    reconstruct (j,10,v,p,3);
    return (EXIT_SUCCESS);
}